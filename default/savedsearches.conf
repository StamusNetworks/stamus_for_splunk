[Threats by Network]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
dispatchAs = user
display.events.fields = ["host","source","hostname"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = stamus
request.ui_dispatch_view = search
search = event_type="stamus" | eval Network = if('stamus.asset_net_info' == "", "Unknown", 'stamus.asset_net_info') | stats dc(stamus.asset) as Assets by Network, stamus.threat_id

[Assets under Attack]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
dispatchAs = user
display.events.fields = ["host","source","hostname"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = stamus
request.ui_dispatch_view = search
search = event_type="stamus" | lookup hostidlookup ip as stamus.asset | stats min(timestamp) as start_seen, max(timestamp) as last_seen by stamus.threat_id, stamus.asset, stamus.asset_net_info, hostname

[HTTP Servers]
action.email.useNSSubject = 1
alert.track = 0
description = With Version, Port and Network informations
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
dispatchAs = user
display.events.fields = ["host","source","hostname"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.custom.type = force_directed_viz.force_directed
display.visualizations.show = 0
request.ui_dispatch_app = stamus
request.ui_dispatch_view = search
search = | hostidsearch filter="services.values.app_proto=http" | spath path=services{} output=service_info | mvexpand service_info | spath ip | spath input=service_info path=values{} output=service_details | mvexpand service_details | spath input=service_details | search app_proto=http | spath input=service_info port | spath net_info{0}.agg output=Network | table ip Network port http.server

[TLS servers not running on port 443]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
dispatchAs = user
display.events.fields = ["host","source","hostname"]
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.custom.type = force_directed_viz.force_directed
display.visualizations.show = 0
request.ui_dispatch_app = stamus
request.ui_dispatch_view = search
search = | hostidsearch filter="services.values.app_proto=tls" | spath path=services{} output=service_info | mvexpand service_info | spath ip | spath input=service_info path=values{} output=service_details | mvexpand service_details | spath input=service_details | search app_proto=tls | spath input=service_info port | search port !=443 | spath net_info{0}.agg output=Network | table ip Network port tls.fingerprint tls.issuerdn tls.subject

[Domain Controllers List]
action.email.useNSSubject = 1
alert.track = 0
description = List of domain controllers in the network
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
dispatchAs = user
display.events.fields = ["host","source","hostname"]
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.custom.type = force_directed_viz.force_directed
display.visualizations.show = 0
request.ui_dispatch_app = stamus
request.ui_dispatch_view = search
search = | hostidsearch filter="services.values.app_proto=smb services.values.app_proto=krb5 services.port=389" | spath net_info{0}.agg output=Network | spath hostname{}.host output=Host | spath | table ip Host Network first_seen
